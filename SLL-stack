#include<stdio.h>
#include <stdlib.h>

struct ll_node
{
	int data;
	struct ll_node *next;
};

struct ll_node *push(struct ll_node *top, int value);
struct ll_node *pop(struct ll_node *top);
void display(struct ll_node *top);
void peek(struct ll_node *top);

void main()
{
	struct ll_node *top = NULL;
	int choice, val;
	while (1)
	{
		printf("Menu\n1.Push\n2.Pop\n3.Peek\n4.Exit\nEnter your choice: ");
		scanf("%d", &choice);
		switch (choice)
		{
		case 1:
			printf("Enter the value to be pushed: ");
			scanf("%d", &val);
			top = push(top, val);
			display(top);
			break;

		case 2:
			top = pop(top);
			display(top);
			break;

		case 3:
			peek(top);
			break;

		case 4:
			printf("Exiting\n");
			exit(0);

		default:
			printf("Invalid choice!\n");
		}
	}
}

struct ll_node *push(struct ll_node *top, int value)
{
	struct ll_node *pnew = (struct ll_node*)malloc(sizeof(struct ll_node));
	pnew->data = value;
	pnew->next = top;
	return pnew;
}

struct ll_node *pop(struct ll_node *top)
{
	if (top == NULL)
	{
		printf("Stack is empty\n");
		return top;
	}
	struct ll_node *temp = top;
	top = top->next;
	free(temp);
	return top;
}

void peek(struct ll_node *top)
{
	if (top == NULL)
	{
		printf("Stack is empty\n");
	}
	else
	{
		printf("Top element: %d", top->data);
	}
	printf("\n");
}

void display(struct ll_node *top)
{
	if (top == NULL)
	{
		printf("Stack is empty\n");
		return;
	}
	struct ll_node *hp = top;
	printf("Stack elements:\n");
	while (hp != NULL)
	{
		printf("%d\n", hp->data);
		hp = hp->next;
	}
	printf("\n");
}
